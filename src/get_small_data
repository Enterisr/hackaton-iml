from utils import read_jsonl
import json
import os
import random
import pandas as pd

def extract_and_save_sample_seasons(num_seasons=3, output_dir="sample_seasons"):
    """
    Extract a sample of seasons from the training data and save in regular JSON format.
    
    Args:
        num_seasons (int): Number of seasons to extract (default is now 1)
        output_dir (str): Output directory path
    """
    # Create output directory if it doesn't exist
    os.makedirs(output_dir, exist_ok=True)
    
    # Load the training data
    file_path = "data/train_test_splits/train.jsonl"
    seasons = read_jsonl(file_path)
    
    print(f"Total seasons in dataset: {len(seasons)}")
    
    # Take just one season (or the specified number)
    if len(seasons) > num_seasons:
        sample_seasons = random.sample(seasons, num_seasons)
    else:
        sample_seasons = seasons[:num_seasons]
        
    print(f"Selected {len(sample_seasons)} season(s)")
    
    # Convert DataFrames to dictionaries for JSON serialization
    for i, season in enumerate(sample_seasons):
        serializable_season = {
            'input': {
                'last season': season['input']['last season'].to_dict(orient='records')[:100],
                'draft class': season['input']['draft class'][:100],
                'teams': season['input']['teams']
            },
            'next season': season['next season'].to_dict(orient='records')[:100]
        }
        
        # Save each season as a separate JSON file
        output_file = os.path.join(output_dir, f"sample_season_{i+1}.json")
        with open(output_file, "w") as f:
            json.dump(serializable_season, f, indent=2)  # Pretty print with indentation
        
        print(f"Season {i+1} saved to {output_file}")
        
        # Print statistics about this season
        print(f"\n=== Season {i+1} Statistics ===")
        print(f"Last Season DataFrame Shape: {season['input']['last season'].shape}")
        print(f"Draft Class Count: {len(season['input']['draft class'])}")
        print(f"Number of Teams: {len(season['input']['teams'])}")
        print(f"Next Season DataFrame Shape: {season['next season'].shape}")
        
        # Print sample of the data structure
        print("\nSample of last season data (3 records):")
        print(json.dumps(serializable_season['input']['last season'][:3], indent=2))
        
        print("\nSample of draft class (5 players):")
        draft_sample = serializable_season['input']['draft class'][:5]
        print(json.dumps(draft_sample, indent=2))
        
        print("\nSample of teams (first 2):")
        teams_sample = dict(list(serializable_season['input']['teams'].items())[:2])
        print(json.dumps(teams_sample, indent=2))

if __name__ == "__main__":
    extract_and_save_sample_seasons(3)  # Extract and save just one season